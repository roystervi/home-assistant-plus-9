# File path: src/env.example

# ⚠️  SECURITY WARNING: Never commit actual environment variables to version control!
# Copy this file to .env.local and replace example values with your real credentials.
# Keep your .env.local file private and add it to your .gitignore file.

# =============================================================================
# HOME ASSISTANT CONFIGURATION
# =============================================================================

# Base URL of your Home Assistant instance
# Include the protocol (http:// or https://) and port if non-standard
# Example: https://homeassistant.local:8123 or http://192.168.1.100:8123
NEXT_PUBLIC_HA_BASE_URL=https://homeassistant.local:8123

# Long-lived access token for Home Assistant API
# Generate this in Home Assistant: Profile > Long-lived access tokens > Create token
# This token allows full access to your Home Assistant instance - keep it secure!
NEXT_PUBLIC_HA_TOKEN=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.example_token_replace_with_real_token

# WebSocket URL for real-time Home Assistant updates
# Usually the same as base URL but with ws:// or wss:// protocol
# For HTTP instances: ws://your-ha-url:8123/api/websocket
# For HTTPS instances: wss://your-ha-url:8123/api/websocket
NEXT_PUBLIC_HA_WS_URL=wss://homeassistant.local:8123/api/websocket

# =============================================================================
# GOOGLE OAUTH CONFIGURATION
# =============================================================================

# Google OAuth 2.0 Client ID
# Used for Google authentication and API access
# Obtain from Google Cloud Console > APIs & Credentials > OAuth 2.0 Client IDs
GOOGLE_CLIENT_ID=877988819079-4k60jbk5fcdmtphnas64fo93oon08gid.apps.googleusercontent.com

# Google OAuth 2.0 Client Secret
# Keep this secret secure - never expose in client-side code
# Obtain from Google Cloud Console along with the Client ID
GOOGLE_CLIENT_SECRET=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

# =============================================================================
# ADDITIONAL CONFIGURATION (Optional)
# =============================================================================

# Next.js environment (development, production, test)
NODE_ENV=development

# Base URL for your Next.js application
# Used for OAuth redirects and API callbacks
NEXTAUTH_URL=http://localhost:3000

# Secret key for NextAuth.js session encryption
# Generate a random string: openssl rand -base64 32
NEXTAUTH_SECRET=your-super-secret-nextauth-key-here

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================

# 1. Copy this file to .env.local in your project root
# 2. Replace all example values with your actual credentials
# 3. Ensure .env.local is in your .gitignore file
# 4. Restart your development server after making changes
# 5. Never commit real environment variables to version control

# For Home Assistant setup:
# - Install Home Assistant if not already running
# - Create a long-lived access token in your profile
# - Ensure your Home Assistant instance is accessible from your app

# For Google OAuth setup:
# - Create a project in Google Cloud Console
# - Enable necessary APIs (Google+ API, etc.)
# - Create OAuth 2.0 credentials
# - Add your domain to authorized origins
# - Add redirect URIs for your application